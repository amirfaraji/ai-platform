name:  Attention-Network-Classification
conda_env: conda.yaml

entry_points:
    main:
        parameters:
            batch_size: {type: int, default: 8}
            learning_rate: {type: float, default: 0.001}
            epochs: {type: int, default: 70}
            optimizer : {type: string, default: 'SGD'}
            patience : {type: int, default: 50}
            loss_function: {type: string, default: 'categorical_crossentropy'}
            img_wid : {type: int, default: 128}
            img_hgt : {type: int, default: 128}
            img_channel : {type: int, default: 1}
            num_of_classes : {type: int, default: 2}
            model_to_train : {type: string, default: 'ResNet-Attention'}
            weight_path : {type: string, default: './pretrain_weights/pretrained-RAN-weights.h5'}
            load_weights_flag: {type: bool, default: False}
        command: "python train.py {batch_size} {learning_rate} {epochs} {optimizer} {patience} {loss_function} {img_wid} {img_hgt} {img_channel} {num_of_classes} {model_to_train} {weight_path} {load_weights_flag}"
    
    predict:
        parameters:
            model_path : {type: string, default: 'model.h5'}
            weight_path : {type: string, default: './pretrain_weights/pretrained-RAN-weights.h5'}
            image_path : {type: string, default: ''}
        command: "python predict.py {model_path} {weight_path} {image_path}"

